"""Unit test for test.py"""
import test 
import unittest
import numpy

class KnownValues(unittest.TestCase):
    #sprawdzic pierwsza wartosc!!!
    knownValue = [[10, 5, 1, 0.5, 0.5,
                   numpy.array(
        [[ 1.,   1.,   0.,   0.,   0. ],
         [ 1.,   1.,   0.,   0.,   0. ],
         [ 1.,   1.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ]]
        ),
                   numpy.array(
        [[ 0.,   0.5,  0.5,  0.5,  0. ],
         [ 0.5,  1.,   1.,   0.5,  0. ],
         [ 0.5,  0.5,  0.5,  0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ]]
        )],
                  [10, 5, 6, 1., 0.,
                   numpy.array(
        [[ 1.,   1.,   0.,   0.,   0. ],
         [ 1.,   1.,   0.,   0.,   0. ],
         [ 1.,   1.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ]]
        ),
                   numpy.array(
        [[ 0.,   1.,   1.,   0.,   0. ],
         [ 0.,   1.,   1.,   0.,   0. ],
         [ 0.,   1.,   1.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ]]
        )],
                  [10, 5, 1, -1., 0.,
                   numpy.array(
        [[ 1.,   1.,   0.,   0.,  0. ],
         [ 1.,   1.,   0.,   0.,  0. ],
         [ 1.,   1.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ]]
        ),
                   numpy.array(
        [[ 1.,   0.,   0.,   0.,  1. ],
         [ 1.,   0.,   0.,   0.,  1. ],
         [ 1.,   0.,   0.,   0.,   1. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ]]
        )],
                  [10, 5, 8, 0., 1.,
                   numpy.array(
        [[ 1.,   1.,   0.,   0.,  0. ],
         [ 0.,   0.,   0.,   0.,  0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 1.,   1.,   0.,   0.,   0. ],
         [ 1.,   1.,   0.,   0.,   0. ]]
        ),
                   numpy.array(
        [[ 0.,   1.,  1.,  0.,  0. ],
         [ 0.,  1.,   1.,   0.,  0. ],
         [ 0.,  1.,  1.,  0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ]]
        )],
                  [10, 5, 2, 0., -1.,
                   numpy.array(
        [[ 1.,   1.,   0.,  0.,  0. ],
         [ 1.,   1.,   0.,   0.,  0. ],
         [ 1.,   1.,   0.,  0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ]]
        ),
                   numpy.array(
        [[ 1.,   1.,   0.,   0.,  0. ],
         [ 0.,   0.,   0.,   0.,  0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 0.,   0.,   0.,   0.,   0. ],
         [ 1.,   1.,   0.,   0.,   0. ],
         [ 1.,   1.,   0.,   0.,   0. ]]
        )]       
                  ]

    def testMpdata(self):
        for nx, ny, nt, cx, cy, psi_in, psi_out in self.knownValue:
             slv = test.Solver_2D(test.Mpdata(1), nx, ny)
             slv.state()[:] = psi_in
             slv.Cx()[:] = cx
             slv.Cy()[:] = cy
             slv.solve(nt)
             print "cx,cy", cx, cy
             self.assertEqual(psi_out.all(), slv.state().all())
             

if __name__ == "__main__":
     unittest.main()
